# Maintainer: Kyle Keen <keenerd@gmail.com>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - patch to not build neon on !ARMv7

pkgname=libvolk
pkgver=1.4
pkgrel=2
pkgdesc="The Vector-Optimized Library of Kernels from Gnuradio"
arch=('x86_64')
url="http://libvolk.org/"
license=('GPL3')
depends=('gcc-libs' 'boost-libs' 'orc' 'python2' 'python2-six')
makedepends=('boost' 'cmake' 'python2-mako')
# this release was really screwed up
# there is going to be lots of stuff hopefully removed in 1.4.1 or 1.5
# first the asc doesn't exist
#source=("http://libvolk.org/releases/volk-$pkgver.tar.gz"{,.asc})
source=("http://libvolk.org/releases/volk-$pkgver.tar.gz"
        '0001-Use-NEON-for-ARMv7-only.patch')
md5sums=('02d3a0f4b19c4cc34ecea19fc37c7fd4'
         'da3b1d0b0f859697c743563ee55152d3')
validpgpkeys=('09E749D885FA881A7E84E823385323EE6402091D')

# doxygen for docs

prepare() {
  cd "$srcdir"
  # here is 99% of the broken
  # I'm not even sure how they made a tarball this broken
  mkdir -p volk-1.4
  mv volk-1.4kernels volk-1.4/kernels
  mv volk-1.4lib volk-1.4/lib
  mv volk-1.4cmake volk-1.4/cmake
  mv volk-1.4include volk-1.4/include
  mv volk-1.4python volk-1.4/python
  mv volk-1.4tmpl volk-1.4/tmpl
  mv volk-1.4apps volk-1.4/apps
  mv volk-1.4gen volk-1.4/gen
  mv volk-1.4docs volk-1.4/docs
  mv volk-1.4Doxyfile.in volk-1.4/Doxyfile.in
  mv volk-1.4COPYING volk-1.4/COPYING
  mv volk-1.4CMakeLists.txt volk-1.4/CMakeLists.txt
  mv volk-1.4DoxygenLayout.xml volk-1.4/DoxygenLayout.xml
  mv volk-1.4appveyor.yml volk-1.4/appveyor.yml
  mv volk-1.4.travis.yml volk-1.4/.travis.yml
  mv volk-1.4README.md volk-1.4/README.md
  mv volk-1.4.gitlab-ci.yml volk-1.4/.gitlab-ci.yml
  mv volk-1.4volk.pc.in volk-1.4/volk.pc.in
  mv volk-1.4.gitignore volk-1.4/.gitignore
  mv volk-1.4.tar.gz volk-1.4/.tar.gz
  cd "$srcdir/volk-$pkgver"
  sed -i -e "s|#![ ]*/usr/bin/env python$|&2|" $(find ./ -name '*.py')
  patch -p1 -i ../0001-Use-NEON-for-ARMv7-only.patch
}

build() {
  export PYTHON=python2
  cd "$srcdir/volk-$pkgver"

  mkdir -p build
  cd build
  cmake \
    -DPYTHON_EXECUTABLE=$(which python2) \
    -DCMAKE_INSTALL_PREFIX=/usr -Wno-dev ../
  make
}

check() {
  cd "$srcdir/volk-$pkgver/build"
  export PYTHON=python2
  if [[ "$CARCH" == "x86_64" ]]; then
    make test
  fi
}

package() {
  cd "$srcdir/volk-$pkgver/build"
  make DESTDIR="$pkgdir" install
}
